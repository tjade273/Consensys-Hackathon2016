// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"randGeneratorAddress","type":"address"}],"name":"setRNG","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"RandGenerator","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"slotState","type":"uint256[3][3]"}],"name":"calculateRewards","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"startSpin","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"startGame","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"lines","type":"bool[]"},{"name":"numOfLines","type":"uint256"},{"name":"wagerPerLine","type":"uint256"}],"name":"placeBet","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "60606040526107c8806100126000396000f3606060405236156100565760e060020a60003504633b84edbd811461005857806344a0e0341461007e57806393c94acb14610090578063ac6bc853146100ea578063d65ab5f21461012e578063eec3cb41146101ba575b005b6000805473ffffffffffffffffffffffffffffffffffffffff1916600435179055610056565b610212600054600160a060020a031681565b604080516060810190915261022f90600490610124908260036000835b82821015610241576040805160608181019092529083810286019060039083908390808284378201915050505050815260200190600101906100ad565b61022f600160a060020a03331660009081526001602081905260408220015460ff16158061012457506040812060010154610100900460ff165b156105a757610002565b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a031682526001908190529381206100569490939084019290918491905b8382111561067757835183826101000a81548160ff02191690830217905550926020019260010160208160000104928301926001030261017f565b604080516020600480358082013583810285810185019096528085526100569592946024949093928501928291850190849080828437509496505093359350506044359150506000600082600014156106e057610002565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b50505033600160a060020a03166000908152600160205260408120549294509250829160ff161590506102b95782516020810151905114801561028c57508251805160409190910151145b156102b957600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260016020526040902054610100900460ff16156103305760208381015190810151905114801561030357506020830151805160409190910151145b1561033057600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a031660009081526001602052604090205462010000900460ff16156103a757604083015180516020919091015114801561037a57506040838101518051910151145b156103a757600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a03166000908152600160205260409020546301000000900460ff161561041d5760208381015101518351511480156103f05750604083810151845151910151145b1561041d57600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260016020526040902054640100000000900460ff161561049857602083810151015160408401515114801561046b575060408381015151845190910151145b1561049857600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a03168252600190819052938120938401929184915b8382111561053d57835183826101000a81548160ff0219169083021790555092602001926001016020816000010492830192600103026104e1565b505061056a9291505b808211156105a357805460ff19168155600101610525565b801561051c5782816101000a81549060ff021916905560010160208160000104928301926001030261053d565b505033600160a060020a031660009081526001602081905260408220908101805461ffff19169055600281018290556003015592915050565b5090565b600160a060020a033381166000908152600160208190526040808320918201805461ff001916610100179055436004928301819055815184547f4b729aff0000000000000000000000000000000000000000000000000000000082529381019190915290519190931692634b729aff9266b1a2bc2ec5000092602483810193829003018185886185025a03f11561000257505050506001600050600033600160a060020a0316815260200190815260200160002060005060040160005054905090565b50506106a4929150610525565b801561066a5782816101000a81549060ff0219169055600101602081600001049283019260010302610677565b5050600160a060020a03331660009081526001602081905260408220908101805461ffff19169055600281018290556003810182905560040155565b8284029150813410156106f257610002565b33600160a060020a031660009081526001602081905260409091200154610100900460ff161561072157610002565b50600160a060020a03331660009081526001602081905260408220808201805460ff1916909217909155600381018390556002018390555b84518110156107c15784818151811015610002576020908102909101810151600160a060020a0333166000908152600190925260409091208260058110156100025760208082049092019190066101000a81548160ff02191690830217905550600101610759565b505050505056",
    unlinked_binary: "60606040526107c8806100126000396000f3606060405236156100565760e060020a60003504633b84edbd811461005857806344a0e0341461007e57806393c94acb14610090578063ac6bc853146100ea578063d65ab5f21461012e578063eec3cb41146101ba575b005b6000805473ffffffffffffffffffffffffffffffffffffffff1916600435179055610056565b610212600054600160a060020a031681565b604080516060810190915261022f90600490610124908260036000835b82821015610241576040805160608181019092529083810286019060039083908390808284378201915050505050815260200190600101906100ad565b61022f600160a060020a03331660009081526001602081905260408220015460ff16158061012457506040812060010154610100900460ff165b156105a757610002565b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a031682526001908190529381206100569490939084019290918491905b8382111561067757835183826101000a81548160ff02191690830217905550926020019260010160208160000104928301926001030261017f565b604080516020600480358082013583810285810185019096528085526100569592946024949093928501928291850190849080828437509496505093359350506044359150506000600082600014156106e057610002565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b50505033600160a060020a03166000908152600160205260408120549294509250829160ff161590506102b95782516020810151905114801561028c57508251805160409190910151145b156102b957600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260016020526040902054610100900460ff16156103305760208381015190810151905114801561030357506020830151805160409190910151145b1561033057600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a031660009081526001602052604090205462010000900460ff16156103a757604083015180516020919091015114801561037a57506040838101518051910151145b156103a757600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a03166000908152600160205260409020546301000000900460ff161561041d5760208381015101518351511480156103f05750604083810151845151910151145b1561041d57600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260016020526040902054640100000000900460ff161561049857602083810151015160408401515114801561046b575060408381015151845190910151145b1561049857600160a060020a0333166000908152600160205260409020600201546714d1120d7b16000002015b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a03168252600190819052938120938401929184915b8382111561053d57835183826101000a81548160ff0219169083021790555092602001926001016020816000010492830192600103026104e1565b505061056a9291505b808211156105a357805460ff19168155600101610525565b801561051c5782816101000a81549060ff021916905560010160208160000104928301926001030261053d565b505033600160a060020a031660009081526001602081905260408220908101805461ffff19169055600281018290556003015592915050565b5090565b600160a060020a033381166000908152600160208190526040808320918201805461ff001916610100179055436004928301819055815184547f4b729aff0000000000000000000000000000000000000000000000000000000082529381019190915290519190931692634b729aff9266b1a2bc2ec5000092602483810193829003018185886185025a03f11561000257505050506001600050600033600160a060020a0316815260200190815260200160002060005060040160005054905090565b50506106a4929150610525565b801561066a5782816101000a81549060ff0219169055600101602081600001049283019260010302610677565b5050600160a060020a03331660009081526001602081905260408220908101805461ffff19169055600281018290556003810182905560040155565b8284029150813410156106f257610002565b33600160a060020a031660009081526001602081905260409091200154610100900460ff161561072157610002565b50600160a060020a03331660009081526001602081905260408220808201805460ff1916909217909155600381018390556002018390555b84518110156107c15784818151811015610002576020908102909101810151600160a060020a0333166000908152600190925260409091208260058110156100025760208082049092019190066101000a81548160ff02191690830217905550600101610759565b505050505056",
    address: "",
    generated_with: "2.0.9",
    contract_name: "Slots"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Slots = Contract;
  }

})();
