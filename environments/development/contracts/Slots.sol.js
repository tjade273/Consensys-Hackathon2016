// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"slotState","type":"uint256[3][3]"}],"name":"calculateRewards","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"startSpin","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"startGame","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"lines","type":"bool[]"},{"name":"numOfLines","type":"uint256"},{"name":"wagerPerLine","type":"uint256"}],"name":"placeBet","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "60606040526106c3806100126000396000f3606060405260e060020a600035046393c94acb811461003c578063ac6bc85314610096578063d65ab5f2146100da578063eec3cb4114610164575b005b60408051606081019091526101bc90600490610124908260036000835b828210156101ce57604080516060818101909252908381028601906003908390839080828437820191505050505081526020019060010190610059565b6101bc600160a060020a03331660009081526020819052604081206001015460ff1615806100d057506040812060010154610100900460ff165b1561053257610002565b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a0316825281905292832061003a939092600184019290918491905b8382111561057657835183826101000a81548160ff021916908302179055509260200192600101602081600001049283019260010302610129565b6040805160206004803580820135838102858101850190965280855261003a9592946024949093928501928291850190849080828437509496505093359350506044359150506000600082600014156105de57610002565b60408051918252519081900360200190f35b50505033600160a060020a03166000908152602081905260408120549294509250829160ff161590506102465782516020810151905114801561021957508251805160409190910151145b1561024657600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260208190526040902054610100900460ff16156102bd5760208381015190810151905114801561029057506020830151805160409190910151145b156102bd57600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a031660009081526020819052604090205462010000900460ff161561033457604083015180516020919091015114801561030757506040838101518051910151145b1561033457600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a03166000908152602081905260409020546301000000900460ff16156103aa57602083810151015183515114801561037d5750604083810151845151910151145b156103aa57600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260208190526040902054640100000000900460ff16156104255760208381015101516040840151511480156103f8575060408381015151845190910151145b1561042557600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a031682528190529283209260018401929184915b838211156104c957835183826101000a81548160ff02191690830217905550926020019260010160208160000104928301926001030261046d565b50506104f69291505b8082111561052e57805460ff191681556001016104b1565b80156104a85782816101000a81549060ff02191690556001016020816000010492830192600103026104c9565b505033600160a060020a0316600090815260208190526040812060018101805461ffff19169055600281018290556003015592915050565b5090565b50600160a060020a033316600090815260208190526040902060018101805461ff0019166101001790554360049190910181905590565b50506105a39291506104b1565b80156105695782816101000a81549060ff0219169055600101602081600001049283019260010302610576565b5050600160a060020a033316600090815260208190526040812060018101805461ffff19169055600281018290556003810182905560040155565b8284029150813410156105f057610002565b33600160a060020a0316600090815260208190526040902060010154610100900460ff161561061e57610002565b50600160a060020a03331660009081526020819052604081206001818101805460ff19169091179055600381018390556002018390555b84518110156106bc5784818151811015610002576020908102909101810151600160a060020a03331660009081529182905260409091208260058110156100025760208082049092019190066101000a81548160ff02191690830217905550600101610655565b505050505056",
    unlinked_binary: "60606040526106c3806100126000396000f3606060405260e060020a600035046393c94acb811461003c578063ac6bc85314610096578063d65ab5f2146100da578063eec3cb4114610164575b005b60408051606081019091526101bc90600490610124908260036000835b828210156101ce57604080516060818101909252908381028601906003908390839080828437820191505050505081526020019060010190610059565b6101bc600160a060020a03331660009081526020819052604081206001015460ff1615806100d057506040812060010154610100900460ff165b1561053257610002565b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a0316825281905292832061003a939092600184019290918491905b8382111561057657835183826101000a81548160ff021916908302179055509260200192600101602081600001049283019260010302610129565b6040805160206004803580820135838102858101850190965280855261003a9592946024949093928501928291850190849080828437509496505093359350506044359150506000600082600014156105de57610002565b60408051918252519081900360200190f35b50505033600160a060020a03166000908152602081905260408120549294509250829160ff161590506102465782516020810151905114801561021957508251805160409190910151145b1561024657600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260208190526040902054610100900460ff16156102bd5760208381015190810151905114801561029057506020830151805160409190910151145b156102bd57600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a031660009081526020819052604090205462010000900460ff161561033457604083015180516020919091015114801561030757506040838101518051910151145b1561033457600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a03166000908152602081905260409020546301000000900460ff16156103aa57602083810151015183515114801561037d5750604083810151845151910151145b156103aa57600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b33600160a060020a0316600090815260208190526040902054640100000000900460ff16156104255760208381015101516040840151511480156103f8575060408381015151845190910151145b1561042557600160a060020a0333166000908152602081905260409020600201546714d1120d7b16000002015b6040805160a0810180835260008083526020838101829052838501829052606084018290526080840182905233600160a060020a031682528190529283209260018401929184915b838211156104c957835183826101000a81548160ff02191690830217905550926020019260010160208160000104928301926001030261046d565b50506104f69291505b8082111561052e57805460ff191681556001016104b1565b80156104a85782816101000a81549060ff02191690556001016020816000010492830192600103026104c9565b505033600160a060020a0316600090815260208190526040812060018101805461ffff19169055600281018290556003015592915050565b5090565b50600160a060020a033316600090815260208190526040902060018101805461ff0019166101001790554360049190910181905590565b50506105a39291506104b1565b80156105695782816101000a81549060ff0219169055600101602081600001049283019260010302610576565b5050600160a060020a033316600090815260208190526040812060018101805461ffff19169055600281018290556003810182905560040155565b8284029150813410156105f057610002565b33600160a060020a0316600090815260208190526040902060010154610100900460ff161561061e57610002565b50600160a060020a03331660009081526020819052604081206001818101805460ff19169091179055600381018390556002018390555b84518110156106bc5784818151811015610002576020908102909101810151600160a060020a03331660009081529182905260409091208260058110156100025760208082049092019190066101000a81548160ff02191690830217905550600101610655565b505050505056",
    address: "",
    generated_with: "2.0.9",
    contract_name: "Slots"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Slots error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Slots = Contract;
  }

})();
